Dockerfile Breakdown

1. Base Image
   FROM node:22
   - Uses Node.js 22 as the base image.
   - Ensures that Node.js and npm are pre-installed.

2. Set Working Directory
   WORKDIR /app
   - Sets /app as the working directory inside the container.
   - All subsequent commands will execute inside /app.

3. Copy package.json Files
   COPY package*.json .
   - Copies package.json and package-lock.json (if present) to the container.
   - Helps with efficient dependency installation (caching layers).

4. Install Dependencies
   RUN npm ci
   - Installs dependencies using npm ci (clean install).
   - Faster & ensures exact versions from package-lock.json.

5. Copy Application Code
   COPY src/index.js index.js
   - Copies src/index.js from the host machine to index.js inside /app in the container.

6. Expose Port 3000
   EXPOSE 3000
   - Indicates that the application runs on port 3000.
   - This is just documentation; to actually publish the port, use -p 3000:3000 when running the container.

7. Define Startup Command
   CMD [ "node", "index.js" ]
   - Runs the application by executing node index.js when the container starts.

Summary
This Dockerfile:
✔ Uses Node.js 22
✔ Sets up the working directory (/app)
✔ Copies dependencies (package.json) and installs them
✔ Copies the app’s main file (index.js)
✔ Exposes port 3000
✔ Runs the app with node index.js
